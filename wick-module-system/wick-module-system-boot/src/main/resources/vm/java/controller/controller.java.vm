package ${packageName}.controller;

import com.wick.boot.common.core.result.PageResult;
import com.wick.boot.common.core.result.ResultUtil;
import com.wick.boot.module.system.app.service.ISystemRoleService;
import com.wick.boot.module.system.model.dto.role.SystemRoleDTO;
import com.wick.boot.module.system.model.dto.role.SystemRoleOptionsDTO;
import com.wick.boot.module.system.model.vo.role.AddRoleVo;
import com.wick.boot.module.system.model.vo.role.QueryRolePageReqVO;
import com.wick.boot.module.system.model.vo.role.UpdateRoleVo;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiOperation;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;
import javax.validation.Valid;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;
import java.util.List;

/**
 * $!{businessName}-Controller控制类
 *
 * @author ${author}
 * @date ${date}
 */
@RestController
@RequestMapping("/${businessName}")
@Api(tags = "系统管理 - 角色信息")
public class ${ClassName}Controller {

    @Resource
    private I${ClassName}Service ${className}Service;

##    @PostMapping
##    @PreAuthorize("@ss.hasPerm('sys:role:add')")
##    @ApiOperation(value = "新增角色信息", notes = "角色信息")
##    public ResultUtil<Long> addRole(@Valid @RequestBody AddRoleVo reqVO) {
##        this.systemRoleService.addRole(reqVO);
##        return ResultUtil.success();
##    }

##    @PutMapping
##    @PreAuthorize("@ss.hasPerm('sys:role:edit')")
##    @ApiOperation(value = "编辑角色信息", notes = "角色信息")
##    public ResultUtil<Boolean> updateRole(@Valid @RequestBody UpdateRoleVo reqVO) {
##        this.systemRoleService.updateRole(reqVO);
##        return ResultUtil.success(true);
##    }
##
##    @DeleteMapping("/{ids}")
##    @PreAuthorize("@ss.hasPerm('sys:role:delete')")
##    @ApiOperation(value = "删除角色信息", notes = "角色信息")
##    @ApiImplicitParam(name = "ids", value = "角色数据ID", required = true, dataType = "Long", dataTypeClass = Long.class)
##    public ResultUtil<Long> deleteRole(@PathVariable("ids") List<Long> ids) {
##        this.systemRoleService.deleteRole(ids);
##        return ResultUtil.success();
##    }
##
##    @GetMapping("/{id}")
##    @ApiOperation(value = "获取角色信息ById", notes = "角色信息")
##    @ApiImplicitParam(name = "id", value = "角色信息ID", required = true, dataType = "Long", dataTypeClass = Long.class)
##    public ResultUtil<SystemRoleDTO> getRoleById(@NotNull(message = "角色信息主键不能为空")
##                                                 @PathVariable("id") Long id) {
##        return ResultUtil.success(systemRoleService.getRoleById(id));
##    }
##
##    @GetMapping("/page")
##    @ApiOperation(value = "获取角色分页", notes = "角色信息")
##    public ResultUtil<PageResult<SystemRoleDTO>> getUserPage(@Valid QueryRolePageReqVO reqVO) {
##        return ResultUtil.success(systemRoleService.getRolePage(reqVO));
##    }

}